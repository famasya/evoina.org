---
import { Archive } from "@lucide/astro";
import { getCollection } from "astro:content";
import PageTitle from "../../components/PageTitle.astro";
import Layout from "../../layouts/Layout.astro";

const locale = "id";
const pageSize = 5;
const currentPage = 1;

const archivesPages = await getCollection(
  "pages",
  ({ data }) => data.locale === locale,
);
const archivesPage = archivesPages.find((page) =>
  page.slug.endsWith("archives"),
);
if (!archivesPage)
  throw new Error(`Archives page not found for locale: ${locale}`);

const posts = await getCollection(
  "archives",
  ({ data }) => data.locale === locale,
);
const categories = [...new Set(posts.map((post) => post.data.category))];
const sortedPosts = posts.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const totalPages = Math.ceil(sortedPosts.length / pageSize);
const paginatedPosts = sortedPosts.slice(
  (currentPage - 1) * pageSize,
  currentPage * pageSize,
);

const allText = "Semua";
const publishedText = "Dipublikasikan pada:";
const postUrlPrefix = "/id/post/";
const archivesUrlPrefix = "/id/archives";
---

<Layout title={archivesPage.data.title}>
  <PageTitle
    title={archivesPage.data.page_title}
    background={archivesPage.data.background}
  />
  <section class="py-12">
    <div class="auto-padding">
      <div class="flex flex-wrap gap-2 mb-8 justify-center">
        <a
          href={archivesUrlPrefix}
          class="px-4 py-2 rounded-full border transition-colors bg-gray-800 text-white border-gray-800"
        >
          {allText}
        </a>
        {
          categories.map((category) => (
            <a
              href={`${archivesUrlPrefix}/${category}`}
              class="px-4 py-2 rounded-full border transition-colors bg-white text-gray-800 border-gray-200 hover:bg-gray-50 flex items-center gap-2"
            >
              <Archive size={16} />
              {category}
            </a>
          ))
        }
      </div>
      <ul class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {
          paginatedPosts.map((post) => (
            <li>
              <a
                href={`${postUrlPrefix}${post.slug.split("/").pop() || post.slug}`}
                class="block border border-gray-200 rounded-lg overflow-hidden hover:shadow-lg transition-shadow flex flex-col h-full"
              >
                {post.data.image && (
                  <img
                    src={post.data.image}
                    alt={post.data.title}
                    class="w-full h-48 object-cover"
                  />
                )}
                <div class="p-6 flex-grow">
                  <p class="text-sm text-gray-500 mb-2">{post.data.category}</p>
                  <h2 class="text-2xl font-serif mb-2">{post.data.title}</h2>
                  <p class="text-gray-600 mb-2">
                    {publishedText}{" "}
                    {post.data.pubDate.toLocaleDateString("id-ID")}
                  </p>
                  <p class="text-lg">{post.data.description}</p>
                </div>
              </a>
            </li>
          ))
        }
      </ul>
      <div class="flex justify-center gap-4 mt-8">
        {
          currentPage < totalPages && (
            <a
              href={`/id/archives/${currentPage + 1}`}
              class="px-4 py-2 rounded bg-gray-200 hover:bg-gray-300"
            >
              Berikutnya
            </a>
          )
        }
        <span>Halaman {currentPage} dari {totalPages}</span>
      </div>
    </div>
  </section>
</Layout>
